@using WhitelistExecuter.Web.Extensions
@model WhitelistExecuter.Web.Models.HomeModel

@{
    ViewBag.Title = "Home Page";
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>@ViewBag.Message</h2>
            </hgroup>
            <p>
            </p>
        </div>
    </section>
}
@if (User.Identity.IsAuthenticated)
{
    <h1>Execute a command</h1>

    using (Html.BeginForm("SetTarget", "Home"))
    {
    @Html.AntiForgeryToken()
        <fieldset>
        <ol>
            <li>
                @Html.LabelFor(m => m.Target)
                @Html.DropDownListFor(m => m.Target, new SelectList(Model.AvailableTargets, "Value", "Text"))
                <span>@Model.Target</span>
            </li>
        </ol>
        <button type="submit">Update</button>
    </fieldset>
    }

    using (Html.BeginForm("SetBaseDir", "Home"))
    {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Target)
        <fieldset>
        <ol>
            <li>
                @Html.LabelFor(m => m.BaseDir)
                @Html.DropDownListFor(m => m.BaseDir, new SelectList(Model.AvailableBaseDirs, "Value", "Text"))
                <span>@Model.BaseDir</span>
            </li>
        </ol>
        <button type="submit">Update</button>
    </fieldset>
    }
    
    <div class="command-form">
    @using (Html.BeginForm("ExecuteCommand", "Home"))
    {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Target)
    @Html.HiddenFor(m => m.BaseDir)

    <fieldset>
        <legend>Command Form</legend>
        <ol>
            <li>
                @Html.LabelFor(m => m.RelativePath)
                @Html.DropDownListFor(m => m.RelativePath, new SelectList(Model.AvailableRelativePaths, "Value", "Text"))
            </li>
            <li>
                @Html.LabelFor(m => m.Command)
                @Html.EnumDropDownListFor(m => m.Command)
            </li>
        </ol>
        <button type="submit">Execute</button>
        <div class="form-errors">@Html.ValidationSummary()</div>
    </fieldset>
    }
    </div>
    
    <hr />
    
    <div class="command-output">
        <p>@Model.LastCommandPath</p>
    @if (null != Model.Error)
    {
        <h3>Error:</h3>
        <pre>@Model.Error</pre>
    }
    else
    {
        <h3>Command Output:</h3>
        <pre>@(Model.StandardOutput + "\n" + @Model.StandardError)</pre>
    }
    </div>
    
}
else
{
    <h1>You are not logged in.</h1>
    <h2>Just Sayin'.</h2>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
